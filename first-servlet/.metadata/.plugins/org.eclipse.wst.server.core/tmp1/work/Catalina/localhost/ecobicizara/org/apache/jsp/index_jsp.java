/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.26
 * Generated at: 2019-12-10 16:57:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.Date;
import baseDatos.ConsultaDAO;
import javax.security.auth.message.callback.PrivateKeyCallback.Request;
import com.google.gson.JsonParser;
import baseDatos.PuntosNegrosDAO;
import baseDatos.PuntosNegros;
import baseDatos.UsuarioDAO;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import java.lang.*;
import java.io.*;
import java.util.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

String list = PuntosNegrosDAO.getJSON(PuntosNegrosDAO.findAllPuntos());
JsonParser parser = new JsonParser();
JsonArray gsonArr = parser.parse(list).getAsJsonArray();
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.lang");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.google.gson.JsonElement");
    _jspx_imports_classes.add("com.google.gson.JsonObject");
    _jspx_imports_classes.add("baseDatos.PuntosNegros");
    _jspx_imports_classes.add("com.google.gson.JsonArray");
    _jspx_imports_classes.add("baseDatos.PuntosNegrosDAO");
    _jspx_imports_classes.add("javax.security.auth.message.callback.PrivateKeyCallback.Request");
    _jspx_imports_classes.add("baseDatos.ConsultaDAO");
    _jspx_imports_classes.add("baseDatos.UsuarioDAO");
    _jspx_imports_classes.add("com.google.gson.JsonParser");
    _jspx_imports_classes.add("java.sql.Date");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<!-- Required meta tags -->\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("\tcontent=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("<link rel=\"icon\" href=\"imagenes/Hoja1.png\" type=\"imagenes/Hoja1.png\">\r\n");
      out.write("<title>EcoBiciZara</title>\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("<link href=\"css/estilo.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"vendors/linericon/style.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/font-awesome.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"vendors/owl-carousel/owl.carousel.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"vendors/lightbox/simpleLightbox.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"vendors/nice-select/css/nice-select.css\">\r\n");
      out.write("<!-- main css -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/style.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/responsive.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- Para que aparezca mapa -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://unpkg.com/leaflet@1.5.1/dist/leaflet.css\" />\r\n");
      out.write("<script src=\"https://unpkg.com/leaflet@1.5.1/dist/leaflet.js\"></script>\r\n");
      out.write("<!-- Para generar rutas en el mapa -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"mapa/leaflet-routing-machine-master/dist/leaflet-routing-machine.css\" />\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"mapa/leaflet-routing-machine-master/examples/Control.Geocoder.css\" />\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"mapa/leaflet-routing-machine-master/examples/Control.Geocoder.js\"></script>\r\n");
      out.write("<!-- Para puntos de calor -->\r\n");
      out.write("<script src=\"mapa/heatmap.js-master/build/heatmap.js\"></script>\r\n");
      out.write("<script src=\"mapa/heatmap.js-master/build/heatmap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body onload=\"get_info();listarConsultas_onload()\">\r\n");
      out.write("\t");

		String nickError = "";
		String origError = "";
		String destError = "";
		Map<String, String> err = (Map<String, String>) request.getAttribute("errores");
		if (err != null) {
			String cabecera = "<span style=\"color:red\">";
			String fin = "</span>";
			if (err.containsKey("nickname"))
				nickError = cabecera + err.get("nickname") + fin;
			if (err.containsKey("origen"))
				origError = cabecera + err.get("origen") + fin;
			if (err.containsKey("destino"))
				destError = cabecera + err.get("destino") + fin;
		}
	
      out.write("\r\n");
      out.write("\t<!--================Header Area =================-->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "cabecera.jsp", out, false);
      out.write("\r\n");
      out.write("\t<!--================Header Area =================-->\r\n");
      out.write("\t<!--================banner Area =================-->\r\n");
      out.write("\t<section class=\"banner_area d-flex text-center\" style=\"\">\r\n");
      out.write("\t\t<div class=\"container align-self-center\">\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t\t<div class=\"banner_content\">\r\n");
      out.write("\t\t\t\t\t\t<!--<h6>Who Created us</h6>-->\r\n");
      out.write("\t\t\t\t\t\t<h1>Bienvenido a EcoBiciZara</h1>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<!--================banner Area =================-->\r\n");
      out.write("\r\n");
      out.write("\t<!--================Event Date Area =================-->\r\n");
      out.write("\t<section class=\"event_date_area\" style=\"height: 500px\">\r\n");
      out.write("\t\t<div id=\"conjunto\">\r\n");
      out.write("\t\t\t<!-- <form id=\"consulta\" action=\"\" method=\"post\"> \r\n");
      out.write("\t\t\t\t<table class=\"tablaConsulta\" style=\"size: 5px\"> \r\n");
      out.write("\t\t\t\t\t<tr>Realizar Busqueda: \r\n");
      out.write("\t\t\t\t\t</tr> \r\n");
      out.write("\t\t\t\t\t<tr> \r\n");
      out.write("\t\t\t\t\t\t<td><label for=\"origen:\" class=\"consulIntro\"> \r\n");
      out.write("\t\t\t\t\t\t\t\t<p class=\"campoIntro\">Origen:</p> \r\n");
      out.write("\t\t\t\t\t\t</label><br> <input class=\"introConsul\" size=\"10px\" type=\"text\" \r\n");
      out.write("\t\t\t\t\t\t\tname=\"origen\" value=\"\" /></td> \r\n");
      out.write("\t\t\t\t\t</tr> \r\n");
      out.write("\t\t\t\t\t<tr> \r\n");
      out.write("\t\t\t\t\t\t<td><label for=\"destino\" class=\"consulIntro\"> \r\n");
      out.write("\t\t\t\t\t\t\t\t<p class=\"campoIntro\">Destino:</p> \r\n");
      out.write("\t\t\t\t\t\t</label><br> <input class=\"introConsul\" size=\"10px\" type=\"text\" \r\n");
      out.write("\t\t\t\t\t\t\tname=\"destino\" value=\"\" /></td> \r\n");
      out.write("\t\t\t\t\t</tr> \r\n");
      out.write("\t\t\t\t\t<tr> \r\n");
      out.write("\t\t\t\t\t\t<td><input class=\"introConsul campoIntroFin\" size=\"10px\" \r\n");
      out.write("\t\t\t\t\t\t\ttype=\"reset\" value=\"Reiniciar consulta\" /></td> \r\n");
      out.write("\t\t\t\t\t</tr> \r\n");
      out.write("\t\t\t\t\t<tr> \r\n");
      out.write("\t\t\t\t\t\t<td><input class=\"introConsul campoIntroFin\" size=\"10px\" \r\n");
      out.write("\t\t\t\t\t\t\ttype=\"submit\" value=\"Enviar consulta\" /></td> \r\n");
      out.write("\t\t\t\t\t</tr> \r\n");
      out.write("\t\t\t\t\t<tr> \r\n");
      out.write("\t\t\t\t\t\t<td><input class=\"introConsul campoIntroFin\" size=\"10px\" \r\n");
      out.write("\t\t\t\t\t\t\ttype=\"submit\" value=\"Guardar consulta\" /></td> \r\n");
      out.write("\t\t\t\t\t</tr> \r\n");
      out.write("\t\t\t\t</table> \r\n");
      out.write("\t\t\t</form> -->\r\n");
      out.write("\t\t\t<div id=\"mapa\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"row\"\r\n");
      out.write("\t\t\tstyle=\"margin-top: 350px; margin-bottom: 10px; margin-left: 79%\">\r\n");
      out.write("\t\t\t<form name=\"botonConsulta\" action=\"guardarConsulta\" method=\"post\">");
      out.print(nickError);
      out.print(origError);
      out.print(destError);
      out.write("\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"origen\" id=\"origen\" /> <input\r\n");
      out.write("\t\t\t\t\ttype=\"hidden\" name=\"destino\" id=\"destino\" /> <input type=\"submit\"\r\n");
      out.write("\t\t\t\t\tvalue=\"Guardar consulta\" onClick=\"procesarConsulta()\" />\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t//Definición de variables para obtener valores de consulta realizado  \r\n");
      out.write("\t\tvar origen_val = \"\";\r\n");
      out.write("\t\tvar destino_val = \"\";\r\n");
      out.write("\r\n");
      out.write("\t\t// Función que procesa el origen y destino \r\n");
      out.write("\t\tfunction procesarConsulta() {\r\n");
      out.write("\t\t\tvar hiddenOrigen = document.getElementById(\"origen\");\r\n");
      out.write("\t\t\thiddenOrigen.value = origen_val;\r\n");
      out.write("\t\t\tvar hiddenDestino = document.getElementById(\"destino\");\r\n");
      out.write("\t\t\thiddenDestino.value = destino_val;\r\n");
      out.write("\t\t\t// Ejecutamos para servlet \r\n");
      out.write("\t\t\tvar form = document.getElementById(\"botonConsulta\");\r\n");
      out.write("\t\t\tform.submit();\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//Prueba de punto caliente \r\n");
      out.write("\t\tvar cfg = {\r\n");
      out.write("\t\t\t\"radius\" : .001,\r\n");
      out.write("\t\t\t\"maxOpacity\" : .8,\r\n");
      out.write("\t\t\t// scales the radius based on map zoom \r\n");
      out.write("\t\t\t\"scaleRadius\" : true,\r\n");
      out.write("\t\t\t// if set to false the heatmap uses the global maximum for colorization \r\n");
      out.write("\t\t\t// if activated: uses the data maximum within the current map boundaries \r\n");
      out.write("\t\t\t//   (there will always be a red spot with useLocalExtremas true) \r\n");
      out.write("\t\t\t\"useLocalExtrema\" : true,\r\n");
      out.write("\t\t\tlatField : 'latitud',\r\n");
      out.write("\t\t\tlngField : 'longitud',\r\n");
      out.write("\t\t\tvalueField : 'contaminacion'\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\tvar heatmapLayer = new HeatmapOverlay(cfg);\r\n");
      out.write("\r\n");
      out.write("\t\t//Capa base del mapa \r\n");
      out.write("\r\n");
      out.write("\t\tvar baseLayer = L\r\n");
      out.write("\t\t\t\t.tileLayer(\r\n");
      out.write("\t\t\t\t\t\t'http://{s}.tile.osm.org/{z}/{x}/{y}.png',\r\n");
      out.write("\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\tattribution : 'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery Â© <a href=\"http://cloudmade.com\">CloudMade</a>',\r\n");
      out.write("\t\t\t\t\t\t\tmaxZoom : 18\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t//creamos el objeto mapa, aplicandole las capas creadas anteriormente \r\n");
      out.write("\t\tvar map = new L.Map('mapa', {\r\n");
      out.write("\t\t\tcenter : new L.LatLng(41.648986, -0.891893),\r\n");
      out.write("\t\t\tzoom : 12,\r\n");
      out.write("\t\t\tlayers : [ baseLayer, heatmapLayer ]\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t//Generador de rutas que añadimos al mapa \r\n");
      out.write("\t\tvar controlLayer = L.Routing.control({\r\n");
      out.write("\t\t\trouter : new L.Routing.osrmv1({\r\n");
      out.write("\t\t\t\tprofile : 'car',\r\n");
      out.write("\t\t\t\tlanguage : 'es'\r\n");
      out.write("\t\t\t}),\r\n");
      out.write("\t\t\tgeocoder : L.Control.Geocoder.photon({}),\r\n");
      out.write("\t\t\tlanguage : 'es',\r\n");
      out.write("\t\t\trouteWhileDragging : true\r\n");
      out.write("\t\t}).on('routeselected', function(e) { // Código ejecutado al generar ruta \r\n");
      out.write("\t\t\t/*var coord = e.route.coordinates; \r\n");
      out.write("\t\t\tvar time = e.route.summary.totalTime; \r\n");
      out.write("\t\t\tvar distance = e.route.summary.totalDistance; \r\n");
      out.write("\t\t\tvar instr = e.route.instructions; \r\n");
      out.write("\t\t\tvar formatter = new L.Routing.Formatter(); \r\n");
      out.write("\t\t\tvar puntos =  \r\n");
      out.write("\t\t\t/*for (var i = 0; i < instr.length; ++i) { \r\n");
      out.write("\t\t\t \talert(\"Instruccion: \" + instr[i].text); \r\n");
      out.write("\t\t\t  }*/\r\n");
      out.write("\t\t\t//Time in seconds \r\n");
      out.write("\t\t\t/*alert(\"time \" + time/60 + \" minutes\"); \r\n");
      out.write("\t\t\talert(\"distance \" + distance/1000 + \"Km\"); \r\n");
      out.write("\t\t\talert(\"Nombre \" + name); \r\n");
      out.write("\t\t\t */\r\n");
      out.write("\t\t\tvar route = e.route;\r\n");
      out.write("\t\t\t//Este bulce se puede usar si queremos guardar además de origen y destino, puntos intermedios.  \r\n");
      out.write("\r\n");
      out.write("\t\t\tfor (var i = 0; i < route.inputWaypoints.length; ++i) {\r\n");
      out.write("\t\t\t\talert(\"Origen: \" + route.inputWaypoints[i].name);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t// Guardamos los valores de la ruta generada \r\n");
      out.write("\t\t\torigen_val = route.inputWaypoints[0].name;\r\n");
      out.write("\t\t\tdestino_val = route.inputWaypoints[1].name;\r\n");
      out.write("\t\t}).addTo(map);\r\n");
      out.write("\t\t// Para capturar errores. \r\n");
      out.write("\t\tL.Routing.errorControl(controlLayer).addTo(map);\r\n");
      out.write("\r\n");
      out.write("\t\tfunction get_info() {\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t\t// Se utiliza para separar la lista devuelta en un array de elementos tipo JSON\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t\t//Se recorre el array para obtener cada elemento\r\n");
      out.write("\t");
for (JsonElement obj : gsonArr) {
      out.write("\r\n");
      out.write("\t\tvar punto = JSON.parse(\r\n");
      out.write("\t");
      out.print("'" + obj.toString() + "'");
      out.write("\r\n");
      out.write("\t\t);\r\n");
      out.write("\t\t\t//Generador puntos calientes. \r\n");
      out.write("\t\t\tvar dataPoint = {\r\n");
      out.write("\t\t\t\tlatitud : punto.latitud,\r\n");
      out.write("\t\t\t\tlongitud : punto.longitud,\r\n");
      out.write("\t\t\t\tcontaminacion : punto.contaminacion\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\theatmapLayer.addData(dataPoint);\r\n");
      out.write("\t");
}
      out.write("\r\n");
      out.write("\t\t};\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<!--================Event Date Area =================-->\r\n");
      out.write("\r\n");
      out.write("\t<!--================About Area =================-->\r\n");
      out.write("\t<!--  \r\n");
      out.write("\t<section class=\"about_area section_gap\"> \r\n");
      out.write("\t\t<div class=\"container\"></div> \r\n");
      out.write("\t</section> \r\n");
      out.write("\t-->\r\n");
      out.write("\t<!--================About Area =================-->\r\n");
      out.write("\r\n");
      out.write("\t<!--================Features Area =================-->\r\n");
      out.write("\t<!--  <section class=\"features_area\"></section> -->\r\n");
      out.write("\t<!--================Features Area =================-->\r\n");
      out.write("\r\n");
      out.write("\t<!--================Sermons work Area =================-->\r\n");
      out.write("\t<!--\r\n");
      out.write("\t<form name=\"botonConsulta\" action=\"guardarConsulta\" method=\"post\">");
      out.print(nickError);
      out.print(origError);
      out.print(destError);
      out.write("\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"origen\" id=\"origen\" /> <input\r\n");
      out.write("\t\t\t\ttype=\"hidden\" name=\"destino\" id=\"destino\" /> <input type=\"submit\"\r\n");
      out.write("\t\t\t\tvalue=\"Guardar consulta\" onClick=\"procesarConsulta()\" />\r\n");
      out.write("\t</form>\r\n");
      out.write("\t-->\r\n");
      out.write("\t");

		String userNick = (String) session.getAttribute("nickname");
		if (userNick == null || userNick.trim().equals("")) {
			userNick = "";
		}
	
      out.write('\r');
      out.write('\n');
      out.write('	');

		if (!userNick.equals("")) {
	
      out.write("\r\n");
      out.write("\t<section class=\"sermons_work_area section_gap\">\r\n");
      out.write("\t\t<div id=\"consulta1\">\r\n");
      out.write("\t\t\t<form name=\"getConsultas\" action=\"\" method=\"get\">\r\n");
      out.write("\t\t\t\t<h5>Buscar consultas</h5>\r\n");
      out.write("\t\t\t\t<label for=\"fecha\">Fecha:</label> <input id=\"fechaConsulta\"\r\n");
      out.write("\t\t\t\t\ttype=\"date\" name=\"fechaConsulta\" value=\"\" /> &nbsp; <br> <label\r\n");
      out.write("\t\t\t\t\tfor=\"origen\"> Origen: </label> <br> <input id=\"origenConsulta\"\r\n");
      out.write("\t\t\t\t\tsize=\"5px\" type=\"text\" name=\"origenConsulta\" value=\"\" /> &nbsp; <br>\r\n");
      out.write("\t\t\t\t<label for=\"destino\"> Destino: </label> <br> <input\r\n");
      out.write("\t\t\t\t\tid=\"destinoConsulta\" size=\"5px\" type=\"text\" name=\"destinoConsulta\"\r\n");
      out.write("\t\t\t\t\tvalue=\"\" /> <br> <br><input \r\n");
      out.write("\t\t\t\t\tsize=\"15px\" type=\"button\" value=\"Enviar consulta\"\r\n");
      out.write("\t\t\t\t\tonclick=\"return listarConsultas();\" />\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"resultados1\">\r\n");
      out.write("\t\t\t<b style=\"color: black;\"> Información obtenida en la consulta</b>\r\n");
      out.write("\t\t\t<br> <br>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t");

		}
	
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction listarConsultas() {\r\n");
      out.write("\t\t\t//Procedemos a obtener todas las consultas efectuadas en la fecha indicada\t\r\n");
      out.write("\t\t\tvar fechaConsulta = document.getElementById(\"fechaConsulta\").value;\r\n");
      out.write("\t\t\twindow.location.replace(\"index.jsp?fechaConsulta=\" + fechaConsulta);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction listarConsultas_onload() {\r\n");
      out.write("\t");
String fechaCon = request.getParameter("fechaConsulta");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t");
System.out.println("La fecha es: " + fechaCon);
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t");
String origenCon = request.getParameter("origenConsulta");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t");
String destinoCon = request.getParameter("destinoConsulta");
      out.write("\r\n");
      out.write("\t\t//Es necesario trasnformarlo a variable tipo sql.date para la consulta\r\n");
      out.write("\t");
Date dateCon = null;
			if (fechaCon != null) {
				dateCon = Date.valueOf(fechaCon);
				System.out.println("Prueba: " + dateCon);
				String lista_consultas = ConsultaDAO.getJSON(ConsultaDAO.findByDate(userNick, dateCon));
				System.out.println("Query: " + lista_consultas);
				// Tratamos la lista de consultas como un objeto de tipo JSON
				JsonParser parser = new JsonParser();
				JsonArray gsonArr = parser.parse(lista_consultas).getAsJsonArray();
      out.write("\r\n");
      out.write("\t\t//dentro del if, se crea la cabecera de la tabla con javascript\r\n");
      out.write("\t\t\t//Tomamos referencia de donde poner la tabla\r\n");
      out.write("\t\t\tvar tableReference = document.getElementById(\"resultados1\");\r\n");
      out.write("\t\t\tvar tbl = document.createElement(\"table\");\r\n");
      out.write("\t\t\ttbl.style.width = '600px';\r\n");
      out.write("\t\t\ttbl.style.border = '1px solid black';\r\n");
      out.write("\t\t\t//Creamos cabecera\r\n");
      out.write("\t\t\tvar tr = tbl.insertRow();\r\n");
      out.write("\t\t\tvar td1 = tr.insertCell();\r\n");
      out.write("\t\t\ttd1.style.border = '1px solid black';\r\n");
      out.write("\t\t\ttd1.style.fontWeight = \"900\";\r\n");
      out.write("\t\t\ttd1.style.textAlign = \"center\";\r\n");
      out.write("\t\t\ttd1.appendChild(document.createTextNode('Origen'));\r\n");
      out.write("\t\t\tvar td2 = tr.insertCell();\r\n");
      out.write("\t\t\ttd2.appendChild(document.createTextNode('Destino'));\r\n");
      out.write("\t\t\ttd2.style.border = '1px solid black';\r\n");
      out.write("\t\t\ttd2.style.fontWeight = \"900\";\r\n");
      out.write("\t\t\ttd2.style.textAlign = \"center\";\r\n");
      out.write("\t\t\t//El bucle, recorre los elementos de la consulta realizada\r\n");
      out.write("\t");
for (JsonElement obj : gsonArr) {
      out.write("\r\n");
      out.write("\t\t// Consulta es un elemento JSON que contiene el origen y destino \r\n");
      out.write("\t\t\tvar consulta = JSON.parse(\r\n");
      out.write("\t");
      out.print("'" + obj.toString() + "'");
      out.write("\r\n");
      out.write("\t\t);\r\n");
      out.write("\t\t\t// Creamos nueva fila con origen y destino\r\n");
      out.write("\t\t\tvar tr = tbl.insertRow();\r\n");
      out.write("\t\t\tvar td1 = tr.insertCell();\r\n");
      out.write("\t\t\ttd1.style.border = '1px solid black';\r\n");
      out.write("\t\t\ttd1.appendChild(document.createTextNode(consulta.origen));\r\n");
      out.write("\t\t\tvar td2 = tr.insertCell();\r\n");
      out.write("\t\t\ttd2.style.border = '1px solid black';\r\n");
      out.write("\t\t\ttd2.appendChild(document.createTextNode(consulta.destino));\r\n");
      out.write("\t");
}
      out.write("\r\n");
      out.write("\t\ttableReference.appendChild(tbl);\r\n");
      out.write("\t");
}
      out.write("\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("\t<!--================ start footer Area  =================-->\r\n");
      out.write("\r\n");
      out.write("\t<footer class=\"footer-area section_gap\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t<div class=\"col-lg-3  col-md-6 col-sm-6\">\r\n");
      out.write("\t\t\t\t\t<div class=\"single-footer-widget\">\r\n");
      out.write("\t\t\t\t\t\t<h6 class=\"footer_title\">About Agency</h6>\r\n");
      out.write("\t\t\t\t\t\t<p>The world has become so fast paced that people donât want\r\n");
      out.write("\t\t\t\t\t\t\tto stand by reading a page of information, they would much rather\r\n");
      out.write("\t\t\t\t\t\t\tlook at a presentation and understand the message. It has come to\r\n");
      out.write("\t\t\t\t\t\t\ta point</p>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"col-lg-3 col-md-6 col-sm-6\">\r\n");
      out.write("\t\t\t\t\t<div class=\"single-footer-widget\">\r\n");
      out.write("\t\t\t\t\t\t<h6 class=\"footer_title\">Navigation Links</h6>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-4\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<ul class=\"list_style\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<li><a href=\"#\">Home</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<li><a href=\"#\">Feature</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<li><a href=\"#\">Services</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<li><a href=\"#\">Portfolio</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-4\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<ul class=\"list_style\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<li><a href=\"#\">Team</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<li><a href=\"#\">Pricing</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<li><a href=\"#\">Blog</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<li><a href=\"#\">Contact</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"col-lg-3 col-md-6 col-sm-6\">\r\n");
      out.write("\t\t\t\t\t<div class=\"single-footer-widget\">\r\n");
      out.write("\t\t\t\t\t\t<h6 class=\"footer_title\">Newsletter</h6>\r\n");
      out.write("\t\t\t\t\t\t<p>For business professionals caught between high OEM price\r\n");
      out.write("\t\t\t\t\t\t\tand mediocre print and graphic output,</p>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"mc_embed_signup\">\r\n");
      out.write("\t\t\t\t\t\t\t<form target=\"_blank\"\r\n");
      out.write("\t\t\t\t\t\t\t\taction=\"https://spondonit.us12.list-manage.com/subscribe/post?u=1462626880ade1ac87bd9c93a&amp;id=92a4423d01\"\r\n");
      out.write("\t\t\t\t\t\t\t\tmethod=\"get\" class=\"subscribe_form relative\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"input-group d-flex flex-row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input name=\"EMAIL\" placeholder=\"Email Address\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tonfocus=\"this.placeholder = ''\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tonblur=\"this.placeholder = 'Email Address '\" required=\"\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttype=\"email\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button class=\"btn sub-btn\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<span class=\"lnr lnr-location\"></span>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"mt-10 info\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"col-lg-3 col-md-6 col-sm-6\">\r\n");
      out.write("\t\t\t\t\t<div class=\"single-footer-widget instafeed\">\r\n");
      out.write("\t\t\t\t\t\t<h6 class=\"footer_title\">InstaFeed</h6>\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"list_style instafeed d-flex flex-wrap\">\r\n");
      out.write("\t\t\t\t\t\t\t<li><img src=\"image/instagram/Image-01.jpg\" alt=\"\"></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><img src=\"image/instagram/Image-02.jpg\" alt=\"\"></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><img src=\"image/instagram/Image-03.jpg\" alt=\"\"></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><img src=\"image/instagram/Image-04.jpg\" alt=\"\"></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><img src=\"image/instagram/Image-05.jpg\" alt=\"\"></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><img src=\"image/instagram/Image-06.jpg\" alt=\"\"></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><img src=\"image/instagram/Image-07.jpg\" alt=\"\"></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><img src=\"image/instagram/Image-08.jpg\" alt=\"\"></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"border_line\"></div>\r\n");
      out.write("\t\t\t<div\r\n");
      out.write("\t\t\t\tclass=\"row footer-bottom d-flex justify-content-between align-items-center\">\r\n");
      out.write("\t\t\t\t<p class=\"col-lg-8 col-sm-8 footer-text m-0\">\r\n");
      out.write("\t\t\t\t\t<!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->\r\n");
      out.write("\t\t\t\t\tCopyright &copy;\r\n");
      out.write("\t\t\t\t\t<script>\r\n");
      out.write("\t\t\t\t\t\tdocument.write(new Date().getFullYear());\r\n");
      out.write("\t\t\t\t\t</script>\r\n");
      out.write("\t\t\t\t\tAll rights reserved | This template is made with <i\r\n");
      out.write("\t\t\t\t\t\tclass=\"fa fa-heart-o\" aria-hidden=\"true\"></i> by <a\r\n");
      out.write("\t\t\t\t\t\thref=\"https://colorlib.com\" target=\"_blank\">Colorlib</a>\r\n");
      out.write("\t\t\t\t\t<!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->\r\n");
      out.write("\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t<div class=\"col-lg-4 col-sm-4 footer-social\">\r\n");
      out.write("\t\t\t\t\t<a href=\"#\"><i class=\"fa fa-facebook\"></i></a> <a href=\"#\"><i\r\n");
      out.write("\t\t\t\t\t\tclass=\"fa fa-twitter\"></i></a> <a href=\"#\"><i\r\n");
      out.write("\t\t\t\t\t\tclass=\"fa fa-dribbble\"></i></a> <a href=\"#\"><i\r\n");
      out.write("\t\t\t\t\t\tclass=\"fa fa-behance\"></i></a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</footer>\r\n");
      out.write("\t<!--================ End footer Area  =================-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- Optional JavaScript -->\r\n");
      out.write("\t<!-- jQuery first, then Popper.js, then Bootstrap JS -->\r\n");
      out.write("\t<script src=\"js/jquery-3.2.1.min.js\"></script>\r\n");
      out.write("\t<script src=\"js/popper.js\"></script>\r\n");
      out.write("\t<script src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("\t<script src=\"vendors/owl-carousel/owl.carousel.min.js\"></script>\r\n");
      out.write("\t<script src=\"js/jquery.ajaxchimp.min.js\"></script>\r\n");
      out.write("\t<script src=\"js/mail-script.js\"></script>\r\n");
      out.write("\t<script src=\"js/mail-script.js\"></script>\r\n");
      out.write("\t<script src=\"js/stellar.js\"></script>\r\n");
      out.write("\t<script src=\"vendors/lightbox/simpleLightbox.min.js\"></script>\r\n");
      out.write("\t<script src=\"vendors/flipclock/timer.js\"></script>\r\n");
      out.write("\t<script src=\"vendors/nice-select/js/jquery.nice-select.min.js\"></script>\r\n");
      out.write("\t<script src=\"js/custom.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
